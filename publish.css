/*----------Defining Custom Font-----------*/
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Source+Code+Pro:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet');


/*------------------Defining Colorschemes-------------------*/
.theme-light.ctp-latte, .ctp-latte .themed-color-wrapper > .theme-light {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 222, 149, 132));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 221, 120, 120));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 236, 131, 208));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 136, 57, 239));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 210, 15, 57));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 230, 69, 83));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 254, 100, 11));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 228, 147, 32));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 64, 160, 43));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 23, 146, 153));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 4, 165, 229));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 32, 159, 181));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 42, 110, 245));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 114, 135, 253));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 87, 82, 121));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 92, 95, 119));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 108, 111, 133));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 124, 127, 147));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 140, 143, 161));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 156, 160, 176));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 172, 176, 190));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 188, 192, 204));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 204, 208, 218));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 239, 241, 245));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 230, 233, 239));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 220, 224, 232));
}

.theme-light.ctp-rosepine-light, .ctp-rosepine-light .themed-color-wrapper > .theme-light {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 214, 129, 125));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 214, 129, 125));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 144, 122, 169));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 144, 122, 169));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 180, 99, 122));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 180, 99, 122));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 214, 129, 125));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 234, 157, 52));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 86, 148, 159));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 86, 148, 159));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 40, 105, 131));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 40, 105, 131));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 40, 105, 131));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 144, 122, 169));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 87, 82, 121));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 97, 92, 132));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 121, 117, 147));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 128, 124, 153));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 152, 147, 165));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 161, 156, 173));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 202, 193, 185));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 209, 201, 194));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 220, 211, 203));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 238, 230, 221));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 230, 219, 209));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 221, 208, 198));
}

.theme-dark.ctp-frappe, .ctp-frappe .themed-color-wrapper > .theme-dark {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 242, 213, 207));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 238, 190, 190));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 244, 184, 228));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 202, 158, 230));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 231, 130, 132));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 234, 153, 156));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 239, 159, 118));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 229, 200, 144));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 166, 209, 137));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 129, 200, 190));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 153, 209, 219));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 133, 193, 220));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 140, 170, 238));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 186, 187, 241));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 198, 206, 239));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 181, 189, 220));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 165, 172, 201));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 148, 155, 183));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 131, 138, 164));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 115, 120, 145));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 98, 103, 126));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 81, 86, 108));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 65, 69, 89));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 48, 52, 70));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 41, 44, 60));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 35, 38, 52));
}

.theme-dark.ctp-macchiato, .ctp-macchiato .themed-color-wrapper > .theme-dark {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 244, 219, 214));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 240, 198, 198));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 245, 189, 230));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 198, 160, 246));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 237, 135, 150));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 238, 153, 160));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 245, 169, 127));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 238, 212, 159));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 166, 218, 149));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 139, 213, 202));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 145, 215, 227));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 125, 196, 228));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 138, 173, 244));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 183, 189, 248));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 197, 207, 245));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 179, 188, 224));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 161, 170, 203));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 143, 151, 183));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 125, 132, 162));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 108, 114, 141));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 90, 95, 120));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 72, 76, 100));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 54, 58, 79));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 36, 39, 58));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 30, 32, 48));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 24, 25, 38));
}

.theme-dark.ctp-mocha, .ctp-mocha .themed-color-wrapper > .theme-dark {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 245, 224, 220));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 242, 205, 205));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 245, 194, 231));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 203, 166, 247));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 243, 139, 168));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 235, 160, 172));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 250, 179, 135));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 249, 226, 175));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 166, 227, 161));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 148, 226, 213));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 137, 220, 235));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 116, 199, 236));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 135, 176, 249));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 180, 190, 254));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 198, 208, 245));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 179, 188, 223));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 161, 168, 201));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 142, 149, 179));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 123, 129, 157));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 105, 109, 134));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 86, 89, 112));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 67, 70, 90));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 49, 50, 68));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 30, 30, 46));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 24, 24, 37));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 17, 17, 27));
}

.theme-dark.ctp-mocha-old, .ctp-mocha-old .themed-color-wrapper > .theme-dark {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 245, 224, 220));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 242, 205, 205));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 245, 194, 231));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 203, 166, 247));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 243, 139, 168));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 235, 160, 172));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 250, 179, 135));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 249, 226, 175));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 166, 227, 161));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 148, 226, 213));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 137, 220, 235));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 116, 199, 236));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 135, 176, 249));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 180, 190, 254));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 217, 224, 238));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 211, 205, 214));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 190, 179, 193));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 167, 156, 176));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 152, 139, 162));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 109, 107, 125));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 87, 82, 105));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 45, 40, 72));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 48, 45, 65));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 30, 30, 46));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 26, 24, 38));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 22, 19, 32));
}

.theme-dark {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 245, 224, 220));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 242, 205, 205));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 245, 194, 231));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 203, 166, 247));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 243, 139, 168));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 235, 160, 172));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 250, 179, 135));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 249, 226, 175));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 166, 227, 161));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 148, 226, 213));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 137, 220, 235));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 116, 199, 236));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 135, 176, 249));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 180, 190, 254));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 198, 208, 245));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 179, 188, 223));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 161, 168, 201));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 142, 149, 179));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 123, 129, 157));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 105, 109, 134));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 86, 89, 112));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 67, 70, 90));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 49, 50, 68));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 30, 30, 46));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 24, 24, 37));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 17, 17, 27));
}

.theme-light {
  --ctp-rosewater: var(--ctp-custom-rosewater, var(--ctp-ext-rosewater, 222, 149, 132));
  --ctp-flamingo: var(--ctp-custom-flamingo, var(--ctp-ext-flamingo, 221, 120, 120));
  --ctp-pink: var(--ctp-custom-pink, var(--ctp-ext-pink, 236, 131, 208));
  --ctp-mauve: var(--ctp-custom-mauve, var(--ctp-ext-mauve, 136, 57, 239));
  --ctp-red: var(--ctp-custom-red, var(--ctp-ext-red, 210, 15, 57));
  --ctp-maroon: var(--ctp-custom-maroon, var(--ctp-ext-maroon, 230, 69, 83));
  --ctp-peach: var(--ctp-custom-peach, var(--ctp-ext-peach, 254, 100, 11));
  --ctp-yellow: var(--ctp-custom-yellow, var(--ctp-ext-yellow, 228, 147, 32));
  --ctp-green: var(--ctp-custom-green, var(--ctp-ext-green, 64, 160, 43));
  --ctp-teal: var(--ctp-custom-teal, var(--ctp-ext-teal, 23, 146, 153));
  --ctp-sky: var(--ctp-custom-sky, var(--ctp-ext-sky, 4, 165, 229));
  --ctp-sapphire: var(--ctp-custom-sapphire, var(--ctp-ext-sapphire, 32, 159, 181));
  --ctp-blue: var(--ctp-custom-blue, var(--ctp-ext-blue, 42, 110, 245));
  --ctp-lavender: var(--ctp-custom-lavender, var(--ctp-ext-lavender, 114, 135, 253));
  --ctp-text: var(--ctp-custom-text, var(--ctp-ext-text, 76, 79, 105));
  --ctp-subtext1: var(--ctp-custom-subtext1, var(--ctp-ext-subtext1, 92, 95, 119));
  --ctp-subtext0: var(--ctp-custom-subtext0, var(--ctp-ext-subtext0, 108, 111, 133));
  --ctp-overlay2: var(--ctp-custom-overlay2, var(--ctp-ext-overlay2, 124, 127, 147));
  --ctp-overlay1: var(--ctp-custom-overlay1, var(--ctp-ext-overlay1, 140, 143, 161));
  --ctp-overlay0: var(--ctp-custom-overlay0, var(--ctp-ext-overlay0, 156, 160, 176));
  --ctp-surface2: var(--ctp-custom-surface2, var(--ctp-ext-surface2, 172, 176, 190));
  --ctp-surface1: var(--ctp-custom-surface1, var(--ctp-ext-surface1, 188, 192, 204));
  --ctp-surface0: var(--ctp-custom-surface0, var(--ctp-ext-surface0, 204, 208, 218));
  --ctp-base: var(--ctp-custom-base, var(--ctp-ext-base, 239, 241, 245));
  --ctp-mantle: var(--ctp-custom-mantle, var(--ctp-ext-mantle, 230, 233, 239));
  --ctp-crust: var(--ctp-custom-crust, var(--ctp-ext-crust, 220, 224, 232));

}

/*------------------Selecting Accents-------------------*/

.theme-dark{
  --ctp-accent: var(--ctp-green);
  --anp-bold-color: var(--ctp-red);
  --anp-italic-color: var(--ctp-blue);
  --anp-highlight-color: var(--ctp-yellow);
}

/*------------------Actual Configs--------------------*/
.theme-dark {
  --color-accent: rgb(var(--ctp-green));
  --color-accent-1: rgb(var(--ctp-green));
  --color-accent-2: rgba(var(--ctp-green), 0.9);
  --text-selection: rgba(var(--ctp-accent), 0.25);
  --interactive-accent: rgb(var(--ctp-accent), 0.5);
  --interactive-accent-hover: rgba(var(--ctp-accent), 0.5);
  --text-accent: rgb(var(--ctp-accent));
  --text-accent-hover: rgb(var(--ctp-accent));
  --text-highlight-bg: rgba(var(--ctp-accent), 0.4);
  --text-highlight-bg-active: rgba(var(--ctp-accent), 0.6);
  --interactive-accent: rgb(var(--ctp-accent));
  --interactive-accent-rgb: var(--ctp-accent);
  --interactive-accent-hover: rgb(var(--ctp-accent));
  --blockquote-border-color: rgb(var(--ctp-accent));
  --background-modifier-active: rgba(var(--ctp-accent), 0.1);
  --background-modifier-active-hover: rgba(var(--ctp-accent), 0.15);
  --link-unresolved-decoration-color: rgba(var(--ctp-accent), 0.3);
  --tag-background: rgba(var(--ctp-accent), 0.1);
  --tag-background-hover: rgba(var(--ctp-accent), 0.2);
  --tag-border-color: rgba(var(--ctp-accent), 0.15);
  --tag-border-color-hover: rgba(var(--ctp-accent), 0.15);
  --nav-item-background-selected: rgba(var(--ctp-accent), 0.2);
  --heading-formatting: rgb(var(--ctp-accent));
  --icon-color-focused: rgb(var(--ctp-accent));
  --bold-color: var(--ctp-red);
  --italic-color: var(--ctp-blue);
  --highlight-color: var(--ctp-yellow);
  --h1-color: rgb(var(--ctp-red));
  --h2-color: rgb(var(--ctp-peach));
  --h3-color: rgb(var(--ctp-green));
  --h4-color: rgb(var(--ctp-teal));
  --h5-color: rgb(var(--ctp-lavender));
}
.theme-dark, .theme-light {
  --mono-rgb-0: var(--ctp-crust);
  --mono-rgb-100: var(--ctp-text);
  --color-red-rgb: var(--ctp-red);
  --color-red: rgb(var(--ctp-red));
  --color-green-rgb: var(--ctp-green);
  --color-green: rgb(var(--ctp-green));
  --color-orange-rgb: var(--ctp-peach);
  --color-orange: rgb(var(--ctp-peach));
  --color-yellow-rgb: var(--ctp-yellow);
  --color-yellow: rgb(var(--ctp-yellow));
  --color-cyan-rgb: var(--ctp-sky);
  --color-cyan: rgb(var(--ctp-sky));
  --color-blue-rgb: var(--ctp-blue);
  --color-blue: rgb(var(--ctp-blue));
  --color-purple-rgb: var(--ctp-lavender);
  --color-purple: rgb(var(--ctp-lavender));
  --color-pink-rgb: var(--ctp-pink);
  --color-pink: rgb(var(--ctp-pink));
  --color-base-00: rgb(var(--ctp-crust));
  --color-base-10: rgb(var(--ctp-mantle));
  --color-base-20: rgb(var(--ctp-base));
  --color-base-25: rgb(var(--ctp-surface0));
  --color-base-30: rgb(var(--ctp-surface1));
  --color-base-35: rgb(var(--ctp-surface2));
  --color-base-40: rgb(var(--ctp-overlay0));
  --color-base-50: rgb(var(--ctp-overlay1));
  --color-base-60: rgb(var(--ctp-overlay2));
  --color-base-70: rgb(var(--ctp-subtext0));
  --color-base-100: rgb(var(--ctp-text));
  --text-highlight-bg: rgba(var(--ctp-yellow), 0.2);
  --text-highlight-bg-active: rgba(var(--ctp-yellow), 0.4);
  --input-shadow: inset 0 0.5px 0.5px 0.5px rgba(var(255, 255, 255), 0.09),
  0 2px 4px 0 rgba(var(--ctp-crust),.15),
  0 1px 1.5px 0 rgba(var(--ctp-crust),.1),
  0 1px 2px 0 rgba(var(--ctp-crust),.2),
  0 0 0 0 transparent;
  --input-shadow-hover: inset 0 0.5px 1px 0.5px rgba(var(255, 255, 255), 0.16),
  0 2px 3px 0 rgba(var(--ctp-crust),.3),
  0 1px 1.5px 0 rgba(var(--ctp-crust),.2),
  0 1px 2px 0 rgba(var(--ctp-crust),.4),
  0 0 0 0 transparent;
  --shadow-s: 0px 1px 2px rgba(var(--ctp-crust), 0.121),
  0px 3.4px 6.7px rgba(var(--ctp-crust), 0.179),
  0px 15px 30px rgba(var(--ctp-crust), 0.3);
  --shadow-l: 0px 1.8px 7.3px rgba(var(--ctp-crust), 0.071),
  0px 6.3px 24.7px rgba(var(--ctp-crust), 0.112),
  0px 30px 90px rgba(var(--ctp-crust), 0.2);
  --background-primary: rgb(var(--ctp-base));
  --background-primary-alt: rgb(var(--ctp-mantle));
  --background-secondary: rgb(var(--ctp-mantle));
  --background-secondary-alt: rgb(var(--ctp-crust));
  --background-modifier-hover: rgba(var(--ctp-text), 0.075);
  --background-modifier-form-field: rgba(var(--ctp-crust), 0.3);
  --background-modifier-success: rgba(var(--ctp-green), 1);
  --background-modifier-success-hover: rgba(var(--ctp-green), 0.9);
  --background-modifier-success-rgb: var(--ctp-green);
  --background-modifier-error: rgba(var(--ctp-red), 1);
  --background-modifier-error-rgb: var(--ctp-red);
  --background-modifier-error-hover: rgba(var(--ctp-red), 0.9);
  --background-modifier-message: rgba(var(--ctp-crust), 0.9);
  --modal-border-color:rgb(var(--ctp-surface0));
  --text-normal: rgb(var(--ctp-text));
  --text-muted: rgb(var(--ctp-overlay2));
  --text-muted-rgb: var(--ctp-overlay2);
  --text-faint: rgb(var(--ctp-subtext0));
  --text-error: rgb(var(--ctp-red));
  --text-error-hover: rgba(var(--ctp-red), 0.8);
  --text-success: rgb(var(--ctp-green));
  --text-on-accent: rgb(var(--ctp-base));
  --interactive-normal: rgb(var(--ctp-surface0));
  --interactive-hover: rgb(var(--ctp-surface1));
  --interactive-success: rgb(var(--ctp-green));
  --workspace-background-translucent: rgba(var(--ctp-crust), 0.6);
  --blockquote-background-color: rgba(var(--ctp-crust), 0.5);
  --width-image-gallery: 200px;
  --min-width-image: 50%;
  --max-width-image: 90%;
  --drag-ghost-background: rgb(var(--ctp-text));
  --drag-ghost-text-color: rgb(var(--ctp-crust));
  --nav-indentation-guide-color: rgba(var(--ctp-crust), 0.4);
  --titlebar-text-color-focused: var(--color-accent);
  --callout-title-padding: var(--size-4-2);
  --table-border-width: var(--anp-table-thickness, 1px);
  --icon-color-focused: var(--color-accent);
  --embed-block-shadow-hover: none;
  --italic-color: rgb(var(--anp-italic-color, var(--ctp-green)));
  --bold-color: rgb(var(--anp-bold-color, var(--ctp-red)));
  --text-highlight-bg: rgba(var(--anp-highlight-color, var(--ctp-yellow)), 0.2);
}

.theme-dark {
  color-scheme: dark;
  --highlight-mix-blend-mode: none;
  --background-modifier-border: rgb(var(--ctp-surface0));
  --background-modifier-border-hover: rgb(var(--ctp-surface1));
  --background-modifier-border-focus: rgb(var(--ctp-surface2));
  --anp-speech-bubble-opacity: var(--anp-sp-op-dark, 0.9);
  --background-modifier-cover: rgba(var(--ctp-mantle), 0.4);
}
.theme-dark.theme-dark {
  --canvas-color: var(--ctp-overlay0);
}

.theme-light {
  color-scheme: light;
  --highlight-mix-blend-mode: none;
  --background-modifier-border: rgb(var(--ctp-surface1));
  --background-modifier-border-hover: rgb(var(--ctp-surface2));
  --background-modifier-border-focus: rgb(var(--ctp-overlay0));
  --anp-speech-bubble-opacity: var(--anp-sp-op-light, 0.5);
  --background-modifier-cover: #00000022;
}
.theme-light.theme-light {
  --canvas-color: var(--ctp-overlay0);
}

body {
  --anp-rainbow-folder-bg-opacity: 1;
  --anp-rainbow-folder-border-opacity: 1;
  --anp-rainbow-folder-collapse-border-custom: #00000044;
  --anp-preview-width-pct: 95%;
  --anp-preview-width-max: 800px;
  --anp-header-margin-value: 15px;
  --anp-header-font: "Inter";
  --tab-stacked-pane-width: calc(var(--anp-tab-stacked-pane-width, 1)*var(--file-line-width));
  --anp-table-width-pct: 100%;
  --code-background: var(--anp-code-bg-color, var(--background-secondary-alt));
  --canvas-color: var(--ctp-overlay2);
  --card-background-color: rgb(var(--ctp-crust));
  --card-foreground-color: rgb(var(--ctp-base));
  --tab-inactive-color: rgb(var(--ctp-mantle));
  --code-normal: var(--anp-code-text-color, var(--text-normal));
  --callout-padding: 10px;
  --callout-title-padding: 8px;
  --callout-content-padding: 5px;
  --background-modifier-active: hsla(var(--color-accent-hsl), 0.1);
  --pdf-background: var(--background-primary);
  --pdf-dark-opacity: 1;
  --pdf-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15), 0 2px 8px transparent;
  --pdf-sidebar-background: var(--background-primary);
  --pdf-thumbnail-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15), 0 2px 8px transparent;
  --font-text-theme: 'Inter', monospace;
  --font-interface-theme: 'Inter', monospace;
  --font-text-size: 16px;
}

body.theme-light {
  --anp-background-image: var(--anp-background-image-light);
  --anp-custom-bg-brightness: var(--anp-custom-bg-brightness-light);
  --anp-custom-bg-blur: var(--anp-custom-bg-blur-light);
  --anp-custom-bg-card-fg-opacity: var(--anp-custom-bg-card-fg-opacity-light);
  font-family: 'Inter', monospace;
}
body.theme-dark {
  --anp-background-image: var(--anp-background-image-dark);
  --anp-custom-bg-brightness: var(--anp-custom-bg-brightness-dark);
  --anp-custom-bg-blur: var(--anp-custom-bg-blur-dark);
  --anp-custom-bg-card-fg-opacity: var(--anp-custom-bg-card-fg-opacity-dark);
  font-family: 'Inter', monospace;
}

.anp-current-line .markdown-source-view .cm-active.cm-line {
  background-color: rgba(var(--ctp-surface1), 0.4);
}

.anp-current-line-border .markdown-source-view .cm-active.cm-line {
  border-left: 2px solid var(--interactive-accent);
  margin-left: -2px !important;
  background-color: rgba(var(--ctp-surface1), 0.4);
}

.anp-current-line-border-only .markdown-source-view .cm-active.cm-line::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: -1.5rem;
  width: 2px;
  background-color: rgba(var(--interactive-accent-rgb), 0.3);
}
.anp-current-line-border-only .markdown-source-view .cm-focused .cm-active.cm-line::before {
  background-color: var(--interactive-accent);
}

.markdown-rendered blockquote {
  padding: 5px 5px 5px 10px;
}

.anp-callout-color-toggle .callout[data-callout=note] {
  --callout-color: var(--ctp-blue);
}
.anp-callout-color-toggle .callout[data-callout=abstract], .anp-callout-color-toggle .callout[data-callout=summary], .anp-callout-color-toggle .callout[data-callout=tldr], .anp-callout-color-toggle .callout[data-callout=seealso] {
  --callout-color: var(--ctp-blue);
}
.anp-callout-color-toggle .callout[data-callout=info], .anp-callout-color-toggle .callout[data-callout=todo], .anp-callout-color-toggle .callout[data-callout=tip], .anp-callout-color-toggle .callout[data-callout=hint], .anp-callout-color-toggle .callout[data-callout=important] {
  --callout-color: var(--ctp-teal);
}
.anp-callout-color-toggle .callout[data-callout=success], .anp-callout-color-toggle .callout[data-callout=check], .anp-callout-color-toggle .callout[data-callout=done], .anp-callout-color-toggle .callout[data-callout=question], .anp-callout-color-toggle .callout[data-callout=help], .anp-callout-color-toggle .callout[data-callout=faq] {
  --callout-color: var(--ctp-green);
}
.anp-callout-color-toggle .callout[data-callout=warning], .anp-callout-color-toggle .callout[data-callout=caution], .anp-callout-color-toggle .callout[data-callout=attention] {
  --callout-color: var(--ctp-yellow);
}
.anp-callout-color-toggle .callout[data-callout=failure], .anp-callout-color-toggle .callout[data-callout=fail], .anp-callout-color-toggle .callout[data-callout=missing] {
  --callout-color: var(--ctp-maroon);
}
.anp-callout-color-toggle .callout[data-callout=danger], .anp-callout-color-toggle .callout[data-callout=error], .anp-callout-color-toggle .callout[data-callout=bug] {
  --callout-color: var(--ctp-red);
}
.anp-callout-color-toggle .callout[data-callout=example] {
  --callout-color: var(--ctp-mauve);
}
.anp-callout-color-toggle .callout[data-callout=quote], .anp-callout-color-toggle .callout[data-callout=cite] {
  --callout-color: var(--ctp-surface2);
}
.anp-callout-color-toggle.anuppuccin-accent-toggle .callout[data-callout=note] {
  --callout-color: var(--ctp-accent);
}

.callout[data-callout-metadata*=revert] {
  --callout-padding: var(--size-4-3) var(--size-4-3) var(--size-4-3) var(--size-4-6);
  --callout-title-padding: 0;
  --callout-content-padding: 0;
}

.callout-content > p:first-child, .callout-content > ul:first-child, .callout-content > ol:first-child {
  margin-top: 0px;
}
.callout-content > p:last-child, .callout-content > ul:last-child, .callout-content > ol:last-child {
  margin-bottom: 0px;
}

.callout{
  border-left: var(--size-2-3) solid rgb(var(--callout-color));
}

.callout[data-callout=tip], .callout[data-callout=hint], .callout[data-callout=important] {
  --callout-color: var(--ctp-teal);
}

.list-cards {
	--list-cards-template: repeat(2, minmax(0, 1fr));
}

.list-cards div > ul {
    --link-color: var(--text-normal);
    --link-unresolved-color: var(--text-muted);
    --link-decoration: none;
    --link-decoration-hover: none;
    --link-external-color: var(--text-normal);
    --link-external-decoration: none;
    --link-external-decoration-hover: none;
    display: grid;
    gap: 8px;
    grid-template-columns: var(--list-cards-template);
    padding: 16px;
}

.list-cards div > ul > li {
    display: flex;
    border-radius: var(--radius-s);
    border: 1px solid var(--color-base-25);
    flex-wrap: wrap;
}

.list-cards div > ul > li a {
    flex-grow: 0;
}

.list-cards div > ul > li a:after {
    content: "";
    flex-basis: 100%;
    height: 0;
}

.list-cards div ul > li a {
    flex-grow: 1;
    padding: 16px;
    font-weight: var(--font-semibold);
    background: none;
}

.list-cards div ul > li:hover {
    border-color: var(--color-base-35);
}

.theme-dark .list-cards div ul > li {
    background-color: var(--background-secondary);
}

.list-cards div ul ul {
    display: block;
    width: 100%;
    color: var(--text-muted);
    font-size: var(--font-smaller);
    margin-top: -8px;
    margin-left: 8px;
    padding: 0 16px 16px;
}

.list-cards div ul ul > li {
    display: block;
}

@media screen and (max-width: 750px) {
    .list-cards.list-cards-mobile-full {
		--list-cards-template: repeat(1, minmax(0, 1fr));
	}
}

body{
	/* for list column, grid and card */
	--list-min-width: 200px;
	--col-rule-color: var(--background-modifier-border); /* #b3b3b3; */
	--col-rule-width: 1px;
	--list-grid-min-width: 250px;
	--list-grid-wide-min-width: 350px;
}



/* === General === */

	/* -- Fixed Width definition -- */
	/* quadruple the last .callout to win specificity with main multi-column callout */
	div[data-callout-metadata*="fw"].callout.callout.callout { flex-grow: 0; flex-shrink: 0;}
	div[data-callout-metadata*="fw1"].callout.callout.callout.callout { flex-basis: 100px; width: 100px; }
	div[data-callout-metadata*="fw2"].callout.callout.callout.callout { flex-basis: 200px; width: 200px; }
	div[data-callout-metadata*="fw3"].callout.callout.callout.callout { flex-basis: 300px; width: 300px; }
	div[data-callout-metadata*="fw4"].callout.callout.callout.callout { flex-basis: 400px; width: 400px; }
	div[data-callout-metadata*="fw5"].callout.callout.callout.callout { flex-basis: 500px; width: 500px; }
	div[data-callout-metadata*="fw6"].callout.callout.callout.callout { flex-basis: 600px; width: 600px; }
	div[data-callout-metadata*="fw7"].callout.callout.callout.callout { flex-basis: 700px; width: 700px; }
	div[data-callout-metadata*="fw8"].callout.callout.callout.callout { flex-basis: 800px; width: 800px; }
	div[data-callout-metadata*="fw9"].callout.callout.callout.callout { flex-basis: 900px; width: 900px; }

	div[data-callout-metadata*="pw1"].callout.callout.callout.callout { flex-basis: 10%; width: 10%; }
	div[data-callout-metadata*="pw2"].callout.callout.callout.callout { flex-basis: 18%; width: 18%; }
	div[data-callout-metadata*="pw3"].callout.callout.callout.callout { flex-basis: 28%; width: 28%; }
	div[data-callout-metadata*="pw4"].callout.callout.callout.callout { flex-basis: 38%; width: 38%; }
	div[data-callout-metadata*="pw5"].callout.callout.callout.callout { flex-basis: 48%; width: 48%; }
	div[data-callout-metadata*="pw6"].callout.callout.callout.callout { flex-basis: 58%; width: 58%; }
	div[data-callout-metadata*="pw7"].callout.callout.callout.callout { flex-basis: 68%; width: 68%; }
	div[data-callout-metadata*="pw8"].callout.callout.callout.callout { flex-basis: 78%; width: 78%; }
	div[data-callout-metadata*="pw9"].callout.callout.callout.callout { flex-basis: 88%; width: 88%; }


	/* metadata "wide-x" to control subcallout flexible max width. only discrete 2,4,8,16 */
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="mw0"].callout.callout { flex-basis: 0; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw1"].callout { flex: 1 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw2"].callout { flex: 2 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw3"].callout { flex: 3 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw4"].callout { flex: 4 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw5"].callout { flex: 5 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw6"].callout { flex: 6 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw7"].callout { flex: 7 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw8"].callout { flex: 8 0 auto; }
	div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="dw9"].callout { flex: 9 0 auto; }

/* === Multi Column Callout (MCC) === */
	/* 	some issues still persists
		(2) some theme uses transparency to affect .callout-title */

	/* common MCC variables */
	body {
		--mcc-img-snw-display: none;
		--callout-min-width: 200px;
		--callout-nowrap-min-width: 250px;
		--callout-gap: 1em;
		--callout-margin: 10px;
	}

	/* -- Main MCC Code -- */

		/* remove callout-title and make callout-content as part of main callout for box formatting */
		div[data-callout="multi-column"].callout > .callout-title { display: none; }
		div[data-callout="multi-column"].callout > .callout-content { display: contents; }
		/* make the main callout a flex and remove box formatting */
		/* --columns: unset to undo Sanctum's mod */
		div[data-callout="multi-column"].callout
			{ display: flex; flex-wrap: wrap; gap: var(--callout-gap); background: unset; border: unset; margin: unset; padding: unset; clear: both; --columns: unset; }
		/* make the subcallout in flex column to allow growing vertically */
		div[data-callout="multi-column"].callout .callout:not([data-callout="multi-column"]) { display: flex; flex-direction: column; }
		div[data-callout="multi-column"].callout:not(.is-collapsed) .callout { margin-inline: var(--callout-margin); margin-block: var(--callout-margin); } /* to allow spacing for box shadow */
		div[data-callout="multi-column"].callout .callout .callout-content { flex-grow: 1}

		div[data-callout="multi-column"].callout > .callout-content > *:is(div,ul,blockquote,p) { flex: 1 1 var(--callout-min-width); margin: 0;}

		/* metadata "wide-x" to control subcallout flexible max width. only discrete 2,4,8,16 */
		div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="min-0"] { flex-basis: 0; }
		div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="wide-2"] { flex-grow: 2; }
		div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="wide-3"] { flex-grow: 3; }
		div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="wide-4"] { flex-grow: 4; }
		div[data-callout="multi-column"].callout > .callout-content > div[data-callout-metadata*="wide-5"] { flex-grow: 5; }

		@media (min-width: 500px) {
			/* .is-collapsed is used to draw the border-left only when it's collapsed */
			div[data-callout="multi-column"].callout > div.callout-content .callout.is-collapsed { box-shadow: unset; height: min-content;}
		}

	/* -- MCC Variant - Flexible Height for Subcallout / Children -- */
		/* also useful if one wants to have non callout children like table and don't want to fill the height */
		div[data-callout="multi-column"].callout {}
		div[data-callout="multi-column"][data-callout-metadata*="flex-h"].callout { align-items: flex-start; }

	/* -- MCC Variation - Fixed Columns -- */
		div[data-callout="multi-column"][data-callout-metadata*="col3"]:not([data-callout-metadata*="icons"]).callout {
			display: grid;
			grid-template-columns: 1fr 1fr 1fr;
		}

	/* -- MCC Variation - Icons -- */

		/* Main code */
		div[data-callout="multi-column"][data-callout-metadata*="icons"] {

			&.callout { justify-content: center; }
			&.callout .callout { display: flex; flex-direction: row; flex-wrap: wrap; padding-bottom: 10px; }
			&.callout.callout .callout-content > p { flex-grow: 1; text-align: center; }
			/* Options for number of columns */
			&[data-callout-metadata*="col2"].callout.callout .callout-content > p { flex-basis: 40%; }
			&[data-callout-metadata*="col3"].callout.callout .callout-content > p { flex-basis: 30%; }
			&[data-callout-metadata*="col4"].callout.callout .callout-content > p { flex-basis: 22%; }
			&[data-callout-metadata*="col5"].callout.callout .callout-content > p { flex-basis: 18%; }

			/* listive theme */
			&.callout p:first-child { margin-top: revert; }
		}


	/* -- MCC Variation - Fixed Width Option -- */
		/* Fixed Width Option (using callout-metadata) */
		div[data-callout="multi-column"][data-callout-metadata*="center-fixed"].callout { justify-content: center; }
		div[data-callout="multi-column"][data-callout-metadata*="left-fixed"].callout { justify-content: flex-start; }
		div[data-callout="multi-column"][data-callout-metadata*="right-fixed"].callout { justify-content: flex-end; }
		div[data-callout="multi-column"][data-callout-metadata*="fixed"].callout > .callout-content > *:is(div,ul) { flex-grow: 0; }

		/* Callout size for Fixed Width Option */
		div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="small"].callout > .callout-content > *:is(div,ul) { flex-basis: calc( var(--float-small-width) * 0.5 ); }
		div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="medium"].callout > .callout-content > *:is(div,ul) { flex-basis: calc( var(--float-medium-width) * 0.65); }
		div[data-callout="multi-column"][data-callout-metadata*="fixed"][data-callout-metadata*="large"].callout > .callout-content > *:is(div,ul) { flex-basis: calc( var(--float-large-width) * 0.8); }


	/* -- MCC Variation - No Wrap Option -- */

		/* No-Wrap Option (using callout-metadata) - for single row with horizontal scrollbar */
		div[data-callout="multi-column"][data-callout-metadata*="no-wrap"].callout {
			flex-wrap: nowrap; overflow-x: scroll;
			& > .callout-content > *:is(div,ul) { flex-shrink: 0; }
		}
		/* No-Wrap Option, Width Options */
		.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"] .callout[data-callout-metadata*="small"] { flex-basis: 300px; }
		.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"] .callout[data-callout-metadata*="medium"] { flex-basis: 400px; }
		.callout[data-callout="multi-column"][data-callout-metadata*="no-wrap"] .callout[data-callout-metadata*="large"] { flex-basis: 600px; }


		/* Align center for items in callout */
		div[data-callout="multi-column"] .callout[data-callout-metadata*="center"] { text-align: center; }



	/* == Special Adjustment for Community Themes */

		 /* Special Adjustment -- for theme with negative margin & box shadow. (e.g. Prism) */
		div[data-callout="multi-column"].callout > .callout-content { margin-top: unset;}
		div[data-callout="multi-column"].callout:not(.is-collapsed) { box-shadow: unset;}

		/* Blue Topaz - remove box shadow from main [!multi-column] */
			body[class*="notebook-liked-markdown-page"].shade-callout-style .callout[data-callout="multi-column"] { box-shadow: unset !important; }

		/* Special Adjustment -- for minimal left margin *//*
		.markdown-source-view.mod-cm6.is-readable-line-width .cm-embed-block.cm-callout > div[data-callout="multi-column"].callout
			{ width: 100%; max-width: 100%; margin-inline: 0 !important; }

		/* Minimal -  .dataview.list-view-ul width - Minimal set the width with --line-width-adaptive (40rem by default) */
		body:not(.table-100):not(.table-max):not(.table-wide) .markdown-preview-view.is-readable-line-width:not(.table-100):not(.table-max):not(.table-wide) div[data-callout="multi-column"].callout .dataview.list-view-ul {width: auto;}

		/* Minimal -- Callout Outline, to ensure sub-callout not overlapped and hidden */
		.callouts-outlined div[data-callout="multi-column"].callout:not(.is-collapsed) .callout:not([data-callout="multi-column"]) {
			margin-top: 1em;
		}


	/* == Special Adjustment for Plugins / Markdown Elements */

		/* SNW plugin */
		div[data-callout*="multi-column"].callout .callout-content span.image-embed + .snw-reference { display: var(--mcc-img-snw-display); }




/* === Blank Container "DIV"'s - can be used with Main Multi-Column layout above === */

	/* "blank-container" - no bg, no border, no title, no nothing, and remove the ligthen effect */
	div[data-callout*="blank"].callout {--callout-blend-mode: normal;}
	div[data-callout*="blank"].callout > .callout-title { display: none; }
	div[data-callout*="blank"].callout > .callout-content {display: contents;}
	div[data-callout*="blank"].callout { border: 0; padding-top: 0; padding-inline: 5px; background: unset; box-shadow: unset; }

	/* -- No Margin -- */
	/* issues still persists
	   - headers font size not same
	   - "no-margin" not fully workable in editing view due to wide-page override for Minimal theme
	*/
	div[data-callout-metadata*="no-margin"]:is(.cm-callout, .callout.callout, .callout.callout .callout-content) {margin: 0; padding: 0;}

	/* -- No Margin for only child -- */
		div[data-callout*="blank"].callout .callout-content > p:only-child {
			margin-block: 0;
		}



	/* -- Special Adjustment for Themes -- */

		/* Mado. Remove  theme's pseudo left border */
		div[data-callout*="blank"] .callout-content::before { display: none; }


/* === Text Justify === */

	.text-justify :is(.markdown-preview-view p,.markdown-source-view .cm-line) { text-align: justify; }


/* === Floating Callout - Base === */
	/* float uses callout-metadata to control the layout. can apply to any callout */

	/* variables */
	body {
		--float-small-width: 300px;
		--float-medium-width: 400px;
		--float-large-width: 600px;

		--float-left-callout-margin: 0 15px 0 0;
		--float-right-callout-margin: 0 0 0 15px;
		--float-callout-top-margin: 0em;
		--float-callout-bottom-margin: 0em;
		--float-callout-snw-display: none;
	}
	/* variables */
	body {
		--float-left-callout-margin-inline: 0 12px;
		--float-right-callout-margin-inline: 12px 0;
		--float-snw-display: none;
	}


	/* -- Main Code. Use media query so that floats only works when there's enough width */
	@media (min-width: 500px){
		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-left"]) { display: inline; z-index: 30;}
		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-left"]) > div > .callout { float: left; z-index: 30; }
		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-left"]) > .edit-block-button { display: none; }
		.markdown-reading-view div[data-callout-metadata*="left"].callout {float: left;}

		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-right"]) { display: inline; z-index: 30;}
		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-right"]) > div > .callout { float: right; z-index: 30; }
		.markdown-source-view .cm-embed-block.cm-callout:has(> div.markdown-rendered > [data-callout-metadata*="float-right"]) > .edit-block-button { display: none; }
		.markdown-reading-view div[data-callout-metadata*="right"].callout {float: right; }

		.markdown-source-view.mod-cm6 .cm-embed-block.cm-callout :is(.callout[data-callout-metadata*="left"], .callout[data-callout-metadata*="right"]) .callout-content > p:last-of-type { margin-bottom: auto;}

		[data-callout-metadata*="float-right"].cm-embed-block.cm-callout {width: auto !important;}

		/* remove margin from first para in the float callout */
		.callout:is(div[data-callout-metadata*="left"],div[data-callout-metadata*="right"]) .callout-content > :is(p:first-child,ul:first-child,ol:first-child) {margin-top: 0;}

		/* Adjustable Gap */
		/* 26Mar2023 only top for now, to work on left-right later */
		.markdown-source-view.mod-cm6 .callout:is(div[data-callout-metadata*="left"]),
		.markdown-source-view.mod-cm6 .callout:is(div[data-callout-metadata*="right"])
			{ margin-top: calc(1em * var(--line-height-normal) + var(--float-callout-top-margin)); }

		/**/
		.markdown-source-view.mod-cm6 .callout:is(div[data-callout-metadata*="left"]),
		.markdown-reading-view div[data-callout-metadata*="left"].callout {
			margin-inline: var(--float-left-callout-margin-inline);
		}
		.markdown-source-view.mod-cm6 .callout:is(div[data-callout-metadata*="right"]),
		.markdown-reading-view div[data-callout-metadata*="right"].callout {
			margin-inline: var(--float-right-callout-margin-inline);
		}
	}

	/* -- FC Size Options -- */
	/* -- small and medium for screen > 500px and large only for screen > 750px *//*
	@media (min-width: 500px){
		div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width .cm-embed-block:is(.cm-callout, .admonition-parent) > div:is([data-callout-metadata*="left"],[data-callout-metadata*="right"])[data-callout-metadata*="-small"].callout,
		div:is([data-callout-metadata*="left"],[data-callout-metadata*="right"])[data-callout-metadata*="-small"].callout {width: var(--float-small-width);}
		div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width .cm-embed-block:is(.cm-callout, .admonition-parent) > div:is([data-callout-metadata*="left"],[data-callout-metadata*="right"])[data-callout-metadata*="-medium"].callout,
		div:is([data-callout-metadata*="left"],[data-callout-metadata*="right"])[data-callout-metadata*="-medium"].callout {width: var(--float-medium-width);}
	}
	@media (min-width: 750px){
		div[class*="wide-"].markdown-source-view.mod-cm6.is-readable-line-width .cm-embed-block:is(.cm-callout, .admonition-parent) > div:is([data-callout-metadata*="left"],[data-callout-metadata*="right"])[data-callout-metadata*="-large"].callout,
		div[data-callout-metadata*="-large"].callout {width: var(--float-large-width);}
	}

	/* -- new version of width control */
		[data-callout-metadata*="-small"].callout {width: var(--float-small-width);}
		[data-callout-metadata*="-medium"].callout {width: var(--float-medium-width);}
		[data-callout-metadata*="-large"].callout {width: var(--float-large-width);}


	/* -- Special Adjustment for Plugins / Markdown Elements -- */

		/* Option for Caption */
		div:is([data-callout-metadata*="caption"]).callout > .callout-content > p .image-embed[alt]:not([alt$=".png"], [alt$=".jpg"], [alt$=".jpeg"], [alt$=".tiff"])::after {content: attr(alt); text-align: center; display: block; font-style: italic; color: var(--text-muted); }
		div:is([data-callout-metadata*="caption"]).callout > .callout-content > p img:not(.emoji) { display: block; margin-right: auto; margin-left: auto;}

		/* Introduce clear to break the float */
			/* .markdown-preview-view h2, *//* remove this as it has weird spacing effect */
			.embedded-backlinks { clear: both; }

		/* for Blockquote underlap the float layout */
			.markdown-preview-view :is(blockquote) { overflow-x: auto; } /* fix for blockquote underlap */
			.markdown-preview-view :is(p) { overflow: unset; } /* fix for para not wrapping around float. applicable for Willemstad */

		/* for SNW plugin */
		div:is([data-callout-metadata*="caption"],[data-callout-metadata*="left"],[data-callout-metadata*="right"]).callout > .callout-content > p .snw-embed-preview { display: var(--float-callout-snw-display); width: min-content; height: min-content; }
		div:is([data-callout-metadata*="caption"],[data-callout-metadata*="left"],[data-callout-metadata*="right"]).callout > .callout-content > p .internal-embed.image-embed ~ br {display: none;}


/* === List Column ===*/
	/* supported for (1) css :has(), (2) yaml cssclass, (3) CT plugin, and (4) MA plugin
		- CSS :has() can be applied to sublists, so no column rule. CT plugin apply to div that houses the ul, so column gap is different
		- xx-column-list for first level only list, but apply anywhere but xx-column-list-block apply at block level. Both require JV's Markdown Attributes plugin
	*/


	/* -- List Column/Grid/Card general styling -- */

		/* hide tag in rendered view, dim it in edit mode and small size */
		:is(div[class*="mcl"].markdown-rendered, .markdown-rendered) a[href*="#mcl"] {display: none;}
		/* :is(div[class*="mcl"].markdown-rendered, .markdown-rendered div[class*="mcl"]) a[href*="#mcl"] {display: none;} */
		.cm-s-obsidian .HyperMD-list-line span[class*="mcl"] {background-color: var(--background-primary) !important; color: var(--text-faint); font-size: 0.9rem; }


	/* -- List Column using YAML cssclass and Markdown Attributes i.e. {.three-column-list-block} -- */

		/* define the column gap and column rule */
		.two-column-list div > ul,   .two-column-list-block,
		.three-column-list div > ul,  .three-column-list-block,
		.four-column-list div > ul,  .four-column-list-block,
		.multi-column-list div > ul,  .multi-column-list-block
			{ column-gap: 3rem; column-rule: var(--col-rule-width) solid var(--col-rule-color); }

		/* define the column count, for fixed number of columns, to subject it to note's width (in future can use @container when installer v1.2.7 widely used ) */
		@media (min-width: 500px ){
			.two-column-list div > ul,   .two-column-list-block {columns: 2; }
			.three-column-list div > ul,  .three-column-list-block {columns: 3; }
			.four-column-list div > ul,  .four-column-list-block {columns: 4; }
		}
		.multi-column-list div > ul,  .multi-column-list-block { column-width: var(--list-min-width); }

		/* Special adjustment for footnotes applied with -colum-list-block -- obsidian creates a <br> tag at the last <li> */
		.footnotes [class$="-column-list-block"] li:last-of-type br:last-of-type {display: none;}


	/* -- List Column Using Tag (CSS :has() and CT plugin) -- */

		/* - List Column using Contextual Typography plugin */
		.tag-mcllist-column > .callout[data-callout*="blank"],
		.tag-mcllist-column > .callout > .callout-content,
		.tag-mcllist-column:not([data-callout]) { column-width: var(--list-min-width); column-gap: 1rem; column-rule: var(--col-rule-width) solid var(--col-rule-color); }
		.tag-mcllist-column.cm-callout {padding-block: 1em;} /* add block padding only for the one in callout */
		.tag-mcllist-column .callout:first-of-type { margin-top: 0; }

		.tag-mcllist-column ul:first-of-type,
		div:has(> ul > li > [href*="#mcl/list-column"]) ul:first-of-type
			{ margin-top: 0; }

		/* - List Column using :has() */
		ul:has(> li > [data-heading] > [href*="#mcl/list-column"]),
		ul:has(> li > [href*="#mcl/list-column"])
			{ column-width: var(--list-min-width); column-gap: 1rem; }

		/* - List Column using :has() but override for LC on first ul to have column rule */
		div:has(> ul > li > [data-heading] > [href*="#mcl/list-column"]),
		div:has(> ul > li > [href*="#mcl/list-column"]),
		div[data-callout*="blank"] > .callout-content:has(> ul > li > [data-heading] > [href*="#mcl/list-column"]),
		div[data-callout*="blank"] > .callout-content:has(> ul > li > [href*="#mcl/list-column"])
			{ column-width: var(--list-min-width); column-gap: 1rem; column-rule: var(--col-rule-width) solid var(--col-rule-color); }

		/* give some margin for the div, for first ul only */
		div:has(> ul > li > [href*="#mcl/list-column"]),
		div:has(> ul > li > [data-heading] > [href*="#mcl/list-column"])
			{ margin-top: 0.8em; }


		/* readjust [!blank] display contents */
		div[data-callout*="blank"] > .callout-content:has(li [href*="#mcl/list-column"]) {display: block; margin: 0; padding: 0; }


	/* -- General Adjustment for List Column -- */

		/* Adjustment for misaligned bullets (this is a hack, need to find better solution later) */
		ul:has([href="#mcl/list-column"]) li > .list-bullet::after, /* :has() */
		.markdown-preview-view[class*="column-list"] li > .list-bullet::after, /* yaml cssclass */
		.tag-mcllist-column ul li > .list-bullet::after, /* contextual typography */
		ul[class*="column-list"] li > .list-bullet::after /* markdown attributes */
			{ position: relative; }


	/* -- Special Adjustment for Plugins for List Column -- */

		/* for Custom Classes */
		div.cc-container:has(li > [href="#mcl/list-column"]) { width: 100%; }



/* === List Grid (using hashtag) === */
	/* supported (1) :has() and (2) Contextual Typography plugin */

	/* -- Main Code -- */

		ul:has(> li > [data-heading] > [href*="#mcl/list-grid"]),
		ul:has(> li > [href*="#mcl/list-grid"]),
		div[class*="mcllist-grid"] ul:first-child
			{ display: grid; grid-template-columns: repeat(auto-fit,minmax(var(--list-grid-min-width),1fr)); }

		ul:has(> li > [data-heading] > [href*="#mcl/list-grid-wide"]),
		ul:has(> li > [href*="#mcl/list-grid-wide"]),
		div[class*="mcllist-grid-wide"] ul:first-child
			{ grid-template-columns: repeat(auto-fit,minmax(var(--list-grid-wide-min-width),1fr)); }

		ul:has(> li > [data-heading] > [href*="#mcl/list-grid"]) > li:not(:last-of-type),
		ul:has(> li > [href*="#mcl/list-grid"]) > li:not(:last-of-type),
		div[class*="mcllist-grid"] ul:first-child > li:not(:last-of-type)
			{ padding-right: 1.6em; }

		ul:has(> li > [data-heading] > [href*="#mcl/list-grid-sm"]),
		ul:has(> li > [href*="#mcl/list-grid-sm"]),
		div[class*="mcllist-grid-sm"] ul:first-child
			{ --list-grid-min-width: 20%; }


		/* - dashboard style, page level only, apply to any first level */
		/* -- applicable only when width > 400pt, else just single column */
		/* grid list block level cannot be done, it breaks formatting */
		@media (min-width: 500px) {
			.two-column-grid-list div > ul { display: grid; grid-column-gap:3em; grid-template-columns:repeat(2,1fr);}
		}
		@media (min-width: 600px) {
			.three-column-grid-list div > ul { display: grid; grid-column-gap:3em; grid-template-columns:repeat(3,1fr);}
		}



/* === List Card (using hashtag) === */
	/* supported (1) :has() and (2) Contextual Typography plugin */

	body {
		--mcl-card-header-border-width: 1px;
		--mcl-card-bg-color: var(--background-secondary);
		--mcl-card-gap: 0.2em;
		--mcl-card-border-width: 1px;
		--mcl-card-border-color: var(--background-modifier-border);
	}

	/* -- Main Code -- */

		/* make the list grid, remove some ul padding */

		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), [class*="mcllist-card"]) ul:first-child { display: grid; grid-template-columns: repeat(auto-fit,minmax(var(--list-grid-min-width),1fr)); margin-block-start: 0.5em; }
		:is(div:has(> ul [data-heading*="#mcl/list-card-wide"]), [class*="mcllist-card-wide"]) ul:first-child { grid-template-columns: repeat(auto-fit, minmax(var(--list-grid-wide-min-width),1fr));}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul ul:not(ul ul ul) { padding-left: 0.1em; }
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul { padding-left: 0; }
		:is(.is-mobile .markdown-preview-section) :is(div:has([data-heading*="#mcl/list-card"]), .tag-mcllist-card) :is(ol:not(ol ol ol),  ul:not(ul ul ul)) {padding-left: 0;}
		/* reposition the collapse indicator and hover behaviour */
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li {position: relative;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li:hover > .collapse-indicator,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li > ul > li:hover > .collapse-indicator {opacity: 1;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li > .collapse-indicator,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li > ul > li > .collapse-indicator {position: absolute; right: 0.7em; padding-right: 0;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul::before {display: none;}
		/* decorate the first heading for cards */
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [data-heading*="#mcl/list-card"]) .callout-content, .tag-mcllist-card, .tag-mcllist-card .callout-content) > ul > li:not(.is-collapsed) > [data-heading] {border-bottom: var(--mcl-card-header-border-width) solid var(--mcl-card-border-color); margin-bottom: 0.2em;}
		/* hide the list bullet for list-card for first and second level */
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > div > div > ul > li > .list-bullet::after,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > div > div > ul > li > ul > li > .list-bullet::after,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > ul > li::before,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > ul > li > ul > li::before,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > ul > li > .list-bullet::after,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) > ul > li > ul > li > .list-bullet::after {visibility: hidden;}
		/* remove the indentation guide */
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul:not(ul ul ul ul)::before {--indentation-guide-width: 0;}
		.markdown-rendered.show-indentation-guide :is(div:has(> ul [data-heading*="#mcl/list-card"]), .tag-mcllist-card) li > ul::before,
		.markdown-rendered.show-indentation-guide :is(div:has(> ul [data-heading*="#mcl/list-card"]), .tag-mcllist-card) li > ol::before {border-right: 0; border-left: 0; }
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) li {list-style: none;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) li li li {list-style: circle;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) .callout ul:not(ul ul) > li,
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul:not(ul ul) > li
			{ margin-inline: var(--mcl-card-gap); margin-bottom: calc(var(--mcl-card-gap)*2); padding: 0.3em 0.5em; outline: var(--mcl-card-border-width) solid var(--mcl-card-border-color); border-radius: 0.5em; background-color: var(--mcl-card-bg-color);}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul:not(ul ul) > li img {width: 100%;}
		:is(div:has(> ul [data-heading*="#mcl/list-card"]), div:has(> ul [href*="#mcl/list-card"]), .tag-mcllist-card) ul img {margin: 0; float: none;}
    
    .list-cards .markdown-preview-section > div:has(ul.has-list-bullet) {
      container-type: inline-size;
    }
    
    .list-cards .has-list-bullet a img {
      margin-right: 5px;
    }


	/* -- Special Adjustment for Themes -- */

		/* Sanctum */
		.markdown-rendered .tag-mcllist-card ul img[alt*=right] {margin: 0;}


/* AGPLv3 License
Floating Status Bar
Author: AnubisNekhet
Note: If you decide to implement it in your theme or redistribute it, please keep this comment (Especially for *certain* individuals who may try to rebrand it as their own :))
Support me: https://buymeacoffee.com/AnubisNekhet
*/